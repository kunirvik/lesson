{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\n\n\nconst form = document.querySelector(\".form\");\n\ndocument.addEventListener('DOMContentLoaded', () => {\nform.addEventListener(\"submit\", async  (event)=>{\n   event.preventDefault();\n   const delayInput = form.elements['delay'];\n   const delay = parseInt(delayInput.value);\n   const stateInput = form.elements['state'];\nconst state = stateInput.value;\n\ntry{\n   const result = await new Promise((resolve, reject)=>{\n      if (state === 'fulfilled'){\n         setTimeout(() => {\n            resolve(delay);\n         }, delay);\n      } else {\n         setTimeout(() => {\n            reject(delay);\n         }, delay);\n      }\n      form.reset();\n   });\n\n  \n\n   iziToast.success({\n      title: 'Success',\n      mesagge:`✅Fulfilled promise in ${result}ms`,\n      position: 'topRight'\n   });\n\n\n}\ncatch(error){\n   iziToast.error({\n      title:'Error',\n      message: `❌ Rejected promise in ${error}ms`,\n      position: 'topRight'\n\n   })\n\n}\n});\n})\n\n\n\n\n\n\nconst startBtn = document.querySelector(\".start-btn\");\nconst container  = document.querySelector(\".container\");\nconst result = document.querySelector(\".result\");\n\nstartBtn.addEventListener(\"click\", spin);\n\n\n\nfunction spin (){\nstartBtn.disabled = true;\n\n   \n    const slotPromises = Array.from(container.children).map((element, i) => new Promise((res, rej)=>{\n     const isGoodMoney = Math.random()> 0.1;\n     const slotSymbol = isGoodMoney ? \"🤑\" : \"😒\"\n     element.textContent = \"\";\n     result.textContent = \"\";\n     setTimeout(()=>{\n     element.textContent = slotSymbol;\n    \n\n       ( isGoodMoney ? res   :  rej)(slotSymbol)\n    }, 1000 + i * 1000);\n\n    }\n\n    ));\n    // Array.from(container.children).forEach(slot => {\n    //     slot.textContent = \"😊\"\n   // });\n\n   Promise.allSettled(slotPromises)\n   .then((res) => {\n    const isWin = new Set( res.map(({reason, value}) => value || reason)).size === 1;\n    startBtn.disabled = false;\n    \n    result.textContent=isWin ? \"winner\" : \"Loser\";\n   })\n};\n"],"names":["form","event","delayInput","delay","state","result","resolve","reject","iziToast","error","startBtn","container","spin","slotPromises","element","i","res","rej","isGoodMoney","slotSymbol","isWin","reason","value"],"mappings":"svBAOA,MAAMA,EAAO,SAAS,cAAc,OAAO,EAE3C,SAAS,iBAAiB,mBAAoB,IAAM,CACpDA,EAAK,iBAAiB,SAAU,MAAQC,GAAQ,CAC7CA,EAAM,eAAc,EACpB,MAAMC,EAAaF,EAAK,SAAS,MAC3BG,EAAQ,SAASD,EAAW,KAAK,EAEpCE,EADgBJ,EAAK,SAAS,MACX,MAEzB,GAAG,CACA,MAAMK,EAAS,MAAM,IAAI,QAAQ,CAACC,EAASC,IAAS,CAE9C,WADCH,IAAU,YACA,IAAM,CACdE,EAAQH,CAAK,CACf,EAEU,IAAM,CACdI,EAAOJ,CAAK,CACd,EAJEA,CAAK,EAMXH,EAAK,MAAK,CAChB,CAAI,EAIDQ,EAAS,QAAQ,CACd,MAAO,UACP,QAAQ,yBAAyBH,CAAM,KACvC,SAAU,UAChB,CAAI,CAGJ,OACMI,EAAM,CACTD,EAAS,MAAM,CACZ,MAAM,QACN,QAAS,yBAAyBC,CAAK,KACvC,SAAU,UAEhB,CAAI,CAEJ,CACA,CAAC,CACD,CAAC,EAOD,MAAMC,EAAW,SAAS,cAAc,YAAY,EAC9CC,EAAa,SAAS,cAAc,YAAY,EAChDN,EAAS,SAAS,cAAc,SAAS,EAE/CK,EAAS,iBAAiB,QAASE,CAAI,EAIvC,SAASA,GAAO,CAChBF,EAAS,SAAW,GAGhB,MAAMG,EAAe,MAAM,KAAKF,EAAU,QAAQ,EAAE,IAAI,CAACG,EAASC,IAAM,IAAI,QAAQ,CAACC,EAAKC,IAAM,CAC/F,MAAMC,EAAc,KAAK,OAAM,EAAI,GAC7BC,EAAaD,EAAc,KAAO,KACxCJ,EAAQ,YAAc,GACtBT,EAAO,YAAc,GACrB,WAAW,IAAI,CACfS,EAAQ,YAAcK,GAGlBD,EAAcF,EAASC,GAAKE,CAAU,CAC/C,EAAO,IAAOJ,EAAI,GAAI,CAEjB,CAEL,CAAK,EAKF,QAAQ,WAAWF,CAAY,EAC9B,KAAMG,GAAQ,CACd,MAAMI,EAAQ,IAAI,IAAKJ,EAAI,IAAI,CAAC,CAAC,OAAAK,EAAQ,MAAAC,CAAK,IAAMA,GAASD,CAAM,CAAC,EAAE,OAAS,EAC/EX,EAAS,SAAW,GAEpBL,EAAO,YAAYe,EAAQ,SAAW,OAC1C,CAAI,CACJ"}